#!/bin/sh

### Change the value of num_interfaces to correspond to the number required
if [ -z "$1" ] ; then
   echo "USAGE : $0 <num_interfaces>"
   exit
fi

### Change the value of num_interfaces to correspond to the number required
num_interfaces=$1

### Interface numbering starts at 1, by default, and are sequential
start_if_num=1

### OF-Controller Host Name #####
OF_CONTROLLER_HOST_NM='"localhost"'

### OF-Controller Host Port # #####
OF_CONTROLLER_HOST_PORT=6633

### Network Speed ###
NW_SPEED_VAL=1
NW_SPEED_VAL_TYPE=gibps

#####################################################################
#####     No need to change anything from here on 		#####
#####################################################################

echo "["
echo " {of_switch,"
echo "  ["
echo "   {controllers,"
echo "    ["
echo "      {"$OF_CONTROLLER_HOST_NM", $OF_CONTROLLER_HOST_PORT}"
echo "    ]},"
echo "   {ports,"
echo "    ["
for ((i=start_if_num; i <= num_interfaces; i++))
do
	echo "      {$i, ["
	echo "           {rate, {$NW_SPEED_VAL, $NW_SPEED_VAL_TYPE}},"
	echo "           {queues, [{1, [{min_rate, 0},"
	echo "                          {max_rate, 1000}]}]}"
	if [ $i -eq $num_interfaces ]; then
		echo "          ]}"
	else
		echo "          ]},"
	fi
done
echo "    ]},"
echo "   {backends,"
echo "    ["
echo "     {userspace, ["
echo "                  {ports,"
echo "                   ["
for ((i=start_if_num; i <= num_interfaces; i++))
do
	if [ $i -eq $num_interfaces ]; then
		echo "                     {$i, [{interface, \"tap$i\"}]}"
	else
		echo "                     {$i, [{interface, \"tap$i\"}]},"
	fi	
done
echo "                   ]}"
echo "                 ]}"
echo "    ]}"
echo "  ]},"
echo " {lager,"
echo "  ["
echo "   {handlers,"
echo "    ["
echo "     {lager_console_backend, info},"
echo "     {lager_file_backend,"
echo "      ["
echo "       {\"log/error.log\", error, 10485760, \"\$D0\", 5},"
echo "       {\"log/console.log\", info, 10485760, \"\$D0\", 5}"
echo "      ]}"
echo "    ]}"
echo "  ]},"
echo " {sasl,"
echo "  ["
echo "   {sasl_error_logger, {file, \"log/sasl-error.log\"}},"
echo "   {errlog_type, error},"
echo "   {error_logger_mf_dir, \"log/sasl\"},      % Log directory"
echo "   {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size"
echo "   {error_logger_mf_maxfiles, 5}           % 5 files max"
echo "  ]}"
echo "]."
